<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ibm.fabric.sdk.sql.mapper.SDKMapper">
	<resultMap type="com.ibm.fabric.sdk.sql.entity.Transaction" id="Transaction">  
        <id column="transaction_id" property="transactionID"/>
        <result column="transaction_status" property="transactionStatus"/>
        <result column="trace_no" property="traceNo"/>
        <result column="item_type" property="itemType"/>
        <result column="item_id" property="itemID"/>
        <result column="item_content" property="itemContent"/>
        <result column="err_msg" property="errMsg"/>
        <result column="update_time" property="updateTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
    </resultMap>

	<select id="selectTransactionByID" parameterType="String" resultMap="Transaction">
        select * 
        from UCHAIN_SDK_TRANSACTION
        where transaction_id = #{transactionID}
    </select>

	<select id="selectTranscationCount" parameterType="map" resultType="int">
		select count(transaction_id)
		from UCHAIN_SDK_TRANSACTION
		<choose>
			<when test="pageBean.status != '' and pageBean.traceNo != '' ">
				where transaction_status = #{pageBean.status} AND trace_no ~* #{pageBean.traceNo}
			</when>
			<when test="pageBean.status != '' and pageBean.traceNo == '' ">
				where transaction_status = #{pageBean.status}
			</when>
			<when test="pageBean.traceNo != '' and pageBean.status == '' ">
				where trace_no ~* #{pageBean.traceNo}
			</when>
		</choose>
	</select>
    
    <select id="selectTransactionListByPage" resultMap="Transaction" >  
		select * from
        	(
				select * 
		        from UCHAIN_SDK_TRANSACTION
		        <choose>
					<when test="pageBean.status != '' and pageBean.traceNo != '' ">
						where transaction_status = #{pageBean.status} AND trace_no ~* #{pageBean.traceNo}
					</when>
					<when test="pageBean.status != '' and pageBean.traceNo == '' ">
						where transaction_status = #{pageBean.status}
					</when>
					<when test="pageBean.traceNo != '' and pageBean.status == '' ">
						where trace_no ~* #{pageBean.traceNo}
					</when>
				</choose>
				order by update_time desc
			) g
        limit #{pageBean.limit} offset #{pageBean.offset}
    </select>
    
    <insert id="insertTransaction" parameterType="com.ibm.fabric.sdk.sql.entity.Transaction" >
        insert into UCHAIN_SDK_TRANSACTION
        values 
        (#{transactionID}, #{transactionStatus}, #{traceNo}, #{itemType}, #{itemID}, #{itemContent}, #{errMsg}, #{updateTime})
    </insert>
    
    <!-- <update id="updateTransactionByID" parameterType="com.psbc.custody.entity.transaction.Transaction" >
        update UCHAIN_SDK_TRANSACTION 
        <set> 
        	transaction_status = #{transactionStatus} 
        </set>
        where transaction_id = #{transactionID}
    </update> -->
    
    <update id="updateTransactionByID" parameterType="map" >
        update UCHAIN_SDK_TRANSACTION
        <set> 
        	transaction_status = #{transBean.transactionStatus},
        	err_msg = #{transBean.errMsg},
        	update_time = now()
        </set>
        where transaction_id = #{transBean.transactionID}
    </update>
    
    <delete id="deleteTransactionByID" parameterType="String" >
        delete from UCHAIN_SDK_TRANSACTION
        where transaction_id = #{transactionID}
    </delete>
    
    <select id="selectStoreByKey" parameterType="String" resultType="String">
        select store_value AS storeValue
        from UCHAIN_SDK_STORE
        where store_key = #{storeKey}
    </select>
    
    <insert id="insertStore" parameterType="map" >
        insert into UCHAIN_SDK_STORE
        values 
        (#{storeBean.storeKey}, #{storeBean.storeValue})
    </insert>
    
    <update id="updateStore" parameterType="map" >
        update UCHAIN_SDK_STORE
        <set> 
        	store_value = #{storeBean.storeValue}
        </set>
        where store_key = #{storeBean.storeKey}
    </update>
</mapper>